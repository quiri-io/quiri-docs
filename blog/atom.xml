<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://quiri-io.github.io/quiri-docs/blog</id>
    <title>Quiri Docs and Blog Blog</title>
    <updated>2024-12-19T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://quiri-io.github.io/quiri-docs/blog"/>
    <subtitle>Quiri Docs and Blog Blog</subtitle>
    <icon>https://quiri-io.github.io/quiri-docs/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Listening for New Messages With the Matrix SDK]]></title>
        <id>listening-for-new-messages-with-the-matrix-sdk</id>
        <link href="https://quiri-io.github.io/quiri-docs/blog/listening-for-new-messages-with-the-matrix-sdk"/>
        <updated>2024-12-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Background]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="background">Background<a class="hash-link" href="#background" title="Direct link to heading">​</a></h2><p><a href="https://matrix.org/docs/matrix-concepts/rooms_and_events/" target="_blank" rel="noopener noreferrer">Almost all actions in matrix are expressed as <code>users</code> sending <code>events</code> to <code>rooms</code>.</a> This makes intuitive sense when it comes to message events but works equally well for non-message events (e.g. add user event, change room name event, etc). When a user adds an event to a room, <a href="https://matrix.org/docs/matrix-concepts/elements-of-matrix/#client" target="_blank" rel="noopener noreferrer">it is first added to the event graph on their personal client, then it is replicated to the user's home server and then it is replicated to all other clients that are in that room.</a> Quiri is written in Dart and uses the matrix dart sdk to handle a lot of the client-server relationship. This includes maintaining the local copy of the current state of a room's state and listening for updates to that room's state. This guide goes into details about how that relationship is maintained so that we can build the quiri client appropriately.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="listening-for-events">Listening for events<a class="hash-link" href="#listening-for-events" title="Direct link to heading">​</a></h2><p>On <a href="https://github.com/quiri-io/quiri_flutter/blob/8405271b51a3c85884502042387289cdc083149f/lib/config/configure_matrix.dart#L4-L11" target="_blank" rel="noopener noreferrer">app startup</a>, we currently call the <a href="https://github.com/famedly/matrix-dart-sdk/blob/501c457ea130481ba5b52d45d4d0ff37b8707964/lib/src/client.dart#L1502-L1519" target="_blank" rel="noopener noreferrer">init method</a>. This method does a number of things including kicking off the first <a href="https://github.com/famedly/matrix-dart-sdk/blob/501c457ea130481ba5b52d45d4d0ff37b8707964/lib/src/client.dart#L1789-L1800" target="_blank" rel="noopener noreferrer">_sync</a> request.</p><p>This sync call can be awaited as a whole, or you can provide the <code>waitForFirstSync</code> as <code>false</code> and instead await the <code>roomsLoading</code>, <code>_accountDataLoading</code> and <code>userDeviceKeysLoading</code> futures individually. We will await on the init for now for simplicity.</p><p>After the initial sync, the client will begin a <a href="https://github.com/famedly/matrix-dart-sdk/blob/501c457ea130481ba5b52d45d4d0ff37b8707964/lib/src/client.dart#L1771-L1781" target="_blank" rel="noopener noreferrer">_backgroundSync</a> that <a href="https://spec.matrix.org/latest/#architecture" target="_blank" rel="noopener noreferrer">long polls</a> every 30 seconds (configurable).</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="replicating-the-state-in-the-client">Replicating the state in the client<a class="hash-link" href="#replicating-the-state-in-the-client" title="Direct link to heading">​</a></h2><p>Each sync job uses the <a href="https://github.com/famedly/matrix-dart-sdk/blob/501c457ea130481ba5b52d45d4d0ff37b8707964/lib/src/client.dart#L1969-L2021" target="_blank" rel="noopener noreferrer">_handleSync</a> method to perform the appropriate updates to state.</p><p>For example, in the <a href="https://github.com/famedly/matrix-dart-sdk/blob/501c457ea130481ba5b52d45d4d0ff37b8707964/lib/src/client.dart#L2277-L2284" target="_blank" rel="noopener noreferrer"><code>_handleRoomEvents</code> sub-handler the updates are made in the following order:</a></p><ul><li>the in-memory state (accessible from the SDK client object e.g. <code>client.rooms</code>)</li><li>the client side database for persistent storage</li><li>the SDK's <a href="https://github.com/famedly/matrix-dart-sdk/blob/501c457ea130481ba5b52d45d4d0ff37b8707964/lib/src/client.dart#L1254-L1285" target="_blank" rel="noopener noreferrer">exposed event streams</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="reacting-to-new-events-in-the-ui">Reacting to new events in the UI<a class="hash-link" href="#reacting-to-new-events-in-the-ui" title="Direct link to heading">​</a></h2><p>In particular, how do we know when new messages have arrived? Let's look at how Fluffychat does it. First let's look at <a href="https://gitlab.com/famedly/fluffychat/-/blob/f19bbcd0102e1b2982af9b988e9e6f7de9cc33a7/lib/pages/chat/chat_event_list.dart#L104-142" target="_blank" rel="noopener noreferrer">where they render their chat boxes</a>. The messages are found in a room's <code>timeline</code>. The <code>timeline</code> is returned from the <a href="https://github.com/famedly/matrix-dart-sdk/blob/42f44de2b13588aede30d5f64fc381ee1a72f90c/lib/src/room.dart#L1467-L1479" target="_blank" rel="noopener noreferrer">SDK getTimeline method</a>. An <code>onUpdate</code> callback is passed to allow the UI to react to new messages arriving. Here is where <a href="https://gitlab.com/famedly/fluffychat/-/blob/1911004d0540d3dea51da327dd32d82d061675f5/lib/pages/chat/chat.dart#L287-340" target="_blank" rel="noopener noreferrer">Fluffychat sets up the timeline listener for new messages</a></p>]]></content>
        <author>
            <name>Nigel Maynard</name>
            <uri>https://github.com/nigel-smk</uri>
        </author>
        <category label="quiri" term="quiri"/>
        <category label="guide" term="guide"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Opening a Quiri with Another User]]></title>
        <id>opening-a-quiri-with-another-user</id>
        <link href="https://quiri-io.github.io/quiri-docs/blog/opening-a-quiri-with-another-user"/>
        <updated>2024-12-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The Problem]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-problem">The Problem<a class="hash-link" href="#the-problem" title="Direct link to heading">​</a></h2><p>In the current dev build of Quiri, the only way to open a conversation with a user is to know their username and to enter it perfectly in the <code>conversation partner</code> field. Here we explore ways to improve this experience, including:</p><ul><li>inviting a user via their email or phone number (3rd party identifier / 3PID)<ul><li>inviting users without an account to create an account to accept the invite and start the conversation</li></ul></li><li>a contact list or friends list to quickly open new quiris</li><li>adding a friend using their quiri userID or displayname</li></ul><p>For the MVP all rooms are to be private and 1-1 and there are no plans to help users discover one another on the platform (e.g. no public spaces for posting). Public posting is being considered for a future release.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-matrix-offers">What Matrix Offers<a class="hash-link" href="#what-matrix-offers" title="Direct link to heading">​</a></h2><p>As we are building on top of matrix, we should first attempt to leverage the features and patterns that they offer out of the box to minimize custom dev work.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="inviting-a-known-user">Inviting a known user<a class="hash-link" href="#inviting-a-known-user" title="Direct link to heading">​</a></h3><p>This is the flow that we are using in the dev build today. Matrix users come with identifiers that look a lot like emails (e.g. <code>@nigel:quiri.io</code>). When you want to open a room with a user you can address it in the same way that you would address an email: know the user's email exactly and write it correctly. If the address is wrong, the room will fail to open same as an email would fail to send.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="user-directory-search">User Directory Search<a class="hash-link" href="#user-directory-search" title="Direct link to heading">​</a></h3><p>Matrix servers offer the ability to <a href="https://spec.matrix.org/v1.11/client-server-api/#user-directory" target="_blank" rel="noopener noreferrer">search the user directory</a> for other users by their <code>user ID</code> or <code>display name</code>. This feature does not simply list the users though. Some search term must be passed (e.g. at least a single character like <code>a</code>) and only those users matching will be shown. As such, this is a feature that could help users find each other in two cases:</p><ul><li>the quiri userId/displayname was shared previously and the search provides some confirmation that the user actually exists and may provide suggestions if the userID/displayname was misspelt</li><li>A user can try their friend's real name and hope they found the right person if the search returns a hit</li></ul><h4 class="anchor anchorWithStickyNavbar_LWe7" id="configuration-options">Configuration Options<a class="hash-link" href="#configuration-options" title="Direct link to heading">​</a></h4><p>The <code>synapse</code> matrix server implementation offers <a href="https://element-hq.github.io/synapse/latest/usage/configuration/config_documentation.html#user_directory" target="_blank" rel="noopener noreferrer">some configuration of the search results</a> but it is limited in it's configurability.</p><p>At it's most open, it returns search results for all users on the server and other servers. For the MVP this may be acceptable but as the community grows it could enable spammers to abuse the platform and harass random users.</p><p>The one restriction that is offered is to set the <code>search_all_users</code> property to false in which,</p><blockquote><p>"...search results will only contain users visible in public rooms and users sharing a room with the requester."
With this flag set we might be able to use this feature to enable searching of all users you have interacted with before as long as you are still in a room with each of those users.</p></blockquote><h3 class="anchor anchorWithStickyNavbar_LWe7" id="third-party-invites">Third Party Invites<a class="hash-link" href="#third-party-invites" title="Direct link to heading">​</a></h3><p>Matrix offers a way to invite someone to a room using a <a href="https://spec.matrix.org/v1.12/client-server-api/#third-party-invites" target="_blank" rel="noopener noreferrer">third-party invite</a>. If the user already has an account associated with that email/phone then they are added to the room. If they don't have an account yet, the user is sent an email inviting them to join quiri (and the room they were invited to). Once they have created an account associated with their email they can join the room.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="list-all-users-in-a-room">List all users in a room<a class="hash-link" href="#list-all-users-in-a-room" title="Direct link to heading">​</a></h3><p>For a given room, <a href="https://playground.matrix.org/#get-/_matrix/client/v3/rooms/-roomId-/members" target="_blank" rel="noopener noreferrer">all members in that room can be listed.</a> this does not help us with our problems directly but may be useful as a workaround for storing a contact list.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="search-a-room">Search a room<a class="hash-link" href="#search-a-room" title="Direct link to heading">​</a></h3><p>Matrix offers the <a href="https://playground.matrix.org/#post-/_matrix/client/v3/search" target="_blank" rel="noopener noreferrer">server-side indexing and search of room event contents</a>. This also does not help us directly but could enable the searching of a "contact list" room.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="our-solution">Our Solution<a class="hash-link" href="#our-solution" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="inviting-someone-to-a-room-using-their-email">Inviting someone to a room using their email<a class="hash-link" href="#inviting-someone-to-a-room-using-their-email" title="Direct link to heading">​</a></h3><p>The built-in third party invite functionality appears to handle this. A more thorough audit should be performed against a local instance of Synapse.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="contact-list">Contact list<a class="hash-link" href="#contact-list" title="Direct link to heading">​</a></h3><p><a href="https://github.com/matrix-org/matrix-spec/issues/111" target="_blank" rel="noopener noreferrer">Matrix does not currently offer a contact list functionality</a>. If we want this functionality, the out-of-the box solution will be to create a non-chat room for each user in which only their contact list is stored. Non-chat rooms are an <a href="https://spec.matrix.org/v1.12/client-server-api/#types" target="_blank" rel="noopener noreferrer">expected use-case for Matrix</a> so it's not terribly hacky but the functionality will be limited. The <a href="https://playground.matrix.org/#post-/_matrix/client/v3/search" target="_blank" rel="noopener noreferrer">room search feature</a> could possibly be used for filtering the contact list but sorting will likely be client side. The client will handle the logic for when a user is added/removed from a "contact list" room and will have to be careful to not include the contact list room in the quiri list. A more thorough audit of the room invite functionality should be performed to detail how "contact list" room invites and acceptances would map to "contact list" invites and acceptances/rejections.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="adding-a-friend-to-your-contact-list">Adding a friend to your contact list<a class="hash-link" href="#adding-a-friend-to-your-contact-list" title="Direct link to heading">​</a></h3><p>For the MVP there will be two ways in which you can add a user to your friends list:</p><ul><li>knowing their email</li><li>knowing their username or display name</li></ul><p>This feels quite restricted but making user directories searchable trades the convenience of searching for users by name with the risk of users being spammed. While this is a low risk today, as the platform grows, this is the kind of thing that crushes communication platforms.</p><p>Taking Discord as a reference, they offer adding a friend strictly by username but you can add someone to a server by email.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a class="hash-link" href="#conclusion" title="Direct link to heading">​</a></h2><p>Overall, the user experience will be:</p><ul><li>open conversations for the first time by providing their email (or knowing their username)</li><li>a one-time use shareable add-me-as-a-friend link that can be pasted into an outside chat or email would be a nice way to make friend adding easier</li><li>open further conversations with a user via your contact list</li></ul>]]></content>
        <author>
            <name>Nigel Maynard</name>
            <uri>https://github.com/nigel-smk</uri>
        </author>
        <category label="quiri" term="quiri"/>
        <category label="solutioning" term="solutioning"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Starting and Restarting Sessions]]></title>
        <id>starting-and-restarting-sessions</id>
        <link href="https://quiri-io.github.io/quiri-docs/blog/starting-and-restarting-sessions"/>
        <updated>2024-06-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Matrix SDK Sessions]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="matrix-sdk-sessions">Matrix SDK Sessions<a class="hash-link" href="#matrix-sdk-sessions" title="Direct link to heading">​</a></h2><p>Matrix uses access tokens to authenticate user requests. The Flutter SDK handles a lot of the token management for us.</p><p>For example, when setting the user's display name, there is no way to pass the auth token. This is because it is stored in a class variable and included in the request on our behalf.</p><p>But what happens to the access token when we shut down the app? The instance of the SDK class will be disposed and the token will go with it. This is why the Matrix Client can be provided a databaseBuilder when being created. The SDK will store the access token, amongst other things in this database and <a href="https://github.com/famedly/matrix-dart-sdk/blob/544888fe33a14e0610b2916b5069656a06aeb299/lib/src/client.dart#L1430-L1459" target="_blank" rel="noopener noreferrer">fetch them on startup</a>. This is what will allow us to keep users logged in even when the restart the app.</p><p>There remains the question of how long a client can stay logged in. It seems that the default for FluffyChat is to have long-lived access tokens. But the matrix spec allows for the use of refresh tokens for improved security.There exists a method <a href="https://github.com/famedly/matrix-dart-sdk/blob/501c457ea130481ba5b52d45d4d0ff37b8707964/lib/src/client.dart#L241-L279" target="_blank" rel="noopener noreferrer"><code>refreshAccessToken()</code> that refreshes the access token</a> but it appears that FluffyChat doesn't use it... Looks like I'll need to schedule a task to refresh the token. </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="other-session-data">Other session data<a class="hash-link" href="#other-session-data" title="Direct link to heading">​</a></h2><p>While the matrix SDK has it's own ways to persist session data, there are also cases in which we will want to persist session data (e.g. the user's sign-up stage). For these non-matrix session data, we will use the <a href="https://pub.dev/packages/hydrated_bloc" target="_blank" rel="noopener noreferrer">Hydrated Bloc package</a> to securely persist the session data.</p><h1>State Restoration in Flutter</h1><p><a href="https://www.flutteris.com/blog/en/state_restoration" target="_blank" rel="noopener noreferrer">Thorough blog post</a></p><ul><li>maybe use this primarily for navigation state and lean on hydrated bloc for other state?</li><li><a href="https://github.com/flutter/packages/blob/main/packages/go_router/example/lib/others/state_restoration.dart" target="_blank" rel="noopener noreferrer">goRouter state restoration example</a></li><li>might need to use <a href="https://github.com/tolo/flutter_packages/blob/nested-persistent-navigation/packages/go_router/example/lib/stateful_shell_route.dart" target="_blank" rel="noopener noreferrer">statefulShellRoute?</a></li><li>state restore is only for going from background to foreground if the OS reclaims the memory because it needs it</li><li>when manually shutting down the app and restarting it, state restore does not work (at least for go_router)</li></ul><h1>Startup State Restoration</h1><ul><li>If a user has never used the app<ul><li>there is no state to restore and they should land on the landing page</li></ul></li><li>If a user has started the signup process, but has not yet registered an account (they are registered after picking their unique handle)<ul><li>return the user to where they were in the signup process</li></ul></li><li>if a user exits out of the signup process before registering via the close button in the app<ul><li>clear the app state entirely (including any signup progress)</li></ul></li><li>if a user registers an account successfully<ul><li>clear all signup state (they are signed up now, so we don't have to go back!)</li></ul></li><li>if a user logs out after logging in<ul><li>clear all state</li></ul></li><li>if a user logs in and they have not set their avatar or display name (last step of signup that occurs after registration)<ul><li>detect when loading homepage and redirect user to create profile page<ul><li>using route guards?</li><li>create profile page needs a logout option</li><li>the display name and avatar can be attached to a User HydratedBloc so that we can cache the avatar and displayname</li></ul></li></ul></li></ul>]]></content>
        <author>
            <name>Nigel Maynard</name>
            <uri>https://github.com/nigel-smk</uri>
        </author>
        <category label="guides" term="guides"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Starting and Restarting Sessions]]></title>
        <id>starting-and-restarting-sessions</id>
        <link href="https://quiri-io.github.io/quiri-docs/blog/starting-and-restarting-sessions"/>
        <updated>2024-05-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Matrix SDK Sessions]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="matrix-sdk-sessions">Matrix SDK Sessions<a class="hash-link" href="#matrix-sdk-sessions" title="Direct link to heading">​</a></h2><p>Matrix uses access tokens to authenticate user requests. The Flutter SDK handles a lot of the token management for us.</p><p>For example, when setting the user's display name, there is no way to pass the auth token. This is because it is stored in a class variable and included in the request on our behalf.</p><p>But what happens to the access token when we shut down the app? The instance of the SDK class will be disposed and the token will go with it. This is why the Matrix Client can be provided a databaseBuilder when being created. The SDK will store the access token, amongst other things in this database and <a href="https://github.com/famedly/matrix-dart-sdk/blob/544888fe33a14e0610b2916b5069656a06aeb299/lib/src/client.dart#L1430-L1459" target="_blank" rel="noopener noreferrer">fetch them on startup</a>. This is what will allow us to keep users logged in even when the restart the app.</p><p>There remains the question of how long a client can stay logged in. It seems that the default for FluffyChat is to have long-lived access tokens. But the matrix spec allows for the use of refresh tokens for improved security.There exists a method <a href="https://github.com/famedly/matrix-dart-sdk/blob/501c457ea130481ba5b52d45d4d0ff37b8707964/lib/src/client.dart#L241-L279" target="_blank" rel="noopener noreferrer"><code>refreshAccessToken()</code> that refreshes the access token</a> but it appears that FluffyChat doesn't use it... Looks like I'll need to schedule a task to refresh the token. </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="other-session-data">Other session data<a class="hash-link" href="#other-session-data" title="Direct link to heading">​</a></h2><p>While the matrix SDK has it's own ways to persist session data, there are also cases in which we will want to persist session data (e.g. the user's sign-up stage). For these non-matrix session data, we will use the <a href="https://pub.dev/packages/hydrated_bloc" target="_blank" rel="noopener noreferrer">Hydrated Bloc package</a> to securely persist the session data.</p><h1>State Restoration in Flutter</h1><p><a href="https://www.flutteris.com/blog/en/state_restoration" target="_blank" rel="noopener noreferrer">Thorough blog post</a></p><ul><li>maybe use this primarily for navigation state and lean on hydrated bloc for other state?</li><li><a href="https://github.com/flutter/packages/blob/main/packages/go_router/example/lib/others/state_restoration.dart" target="_blank" rel="noopener noreferrer">goRouter state restoration example</a></li><li>might need to use <a href="https://github.com/tolo/flutter_packages/blob/nested-persistent-navigation/packages/go_router/example/lib/stateful_shell_route.dart" target="_blank" rel="noopener noreferrer">statefulShellRoute?</a></li><li>state restore is only for going from background to foreground if the OS reclaims the memory because it needs it</li><li>when manually shutting down the app and restarting it, state restore does not work (at least for go_router)</li></ul><h1>Startup State Restoration</h1><ul><li>If a user has never used the app<ul><li>there is no state to restore and they should land on the landing page</li></ul></li><li>If a user has started the signup process, but has not yet registered an account (they are registered after picking their unique handle)<ul><li>return the user to where they were in the signup process</li></ul></li><li>if a user exits out of the signup process before registering via the close button in the app<ul><li>clear the app state entirely (including any signup progress)</li></ul></li><li>if a user registers an account successfully<ul><li>clear all signup state (they are signed up now, so we don't have to go back!)</li></ul></li><li>if a user logs out after logging in<ul><li>clear all state</li></ul></li><li>if a user logs in and they have not set their avatar or display name (last step of signup that occurs after registration)<ul><li>detect when loading homepage and redirect user to create profile page<ul><li>using route guards?</li><li>create profile page needs a logout option</li><li>the display name and avatar can be attached to a User HydratedBloc so that we can cache the avatar and displayname</li></ul></li></ul></li></ul>]]></content>
        <author>
            <name>Nigel Maynard</name>
            <uri>https://github.com/nigel-smk</uri>
        </author>
        <category label="guides" term="guides"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Registering New Users with Matrix]]></title>
        <id>registering-new-users</id>
        <link href="https://quiri-io.github.io/quiri-docs/blog/registering-new-users"/>
        <updated>2024-01-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[For Quiri, we want to register users with a username and an email. Luckily, we can reference how Fluffychat does this!]]></summary>
        <content type="html"><![CDATA[<p>For Quiri, we want to register users with a username and an email. Luckily, we can reference how Fluffychat does this!</p><p><a href="https://gitlab.com/famedly/fluffychat/-/blob/5212d7ce4d66fd1465e851aee788ca9f4f6537b8/lib/pages/connect/connect_page.dart#L31-97" target="_blank" rel="noopener noreferrer">Choosing an avatar and username</a></p><p><a href="https://gitlab.com/famedly/fluffychat/-/blob/e88ce8e91cc992885a109a39270558503aaa455f/lib/pages/sign_up/signup.dart#L76-125" target="_blank" rel="noopener noreferrer">Provide email and choose a password</a></p><p>Lets find the associated REST calls in the <a href="https://playground.matrix.org/#overview" target="_blank" rel="noopener noreferrer">matrix API spec</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="check-if-username-is-available">Check if username is available<a class="hash-link" href="#check-if-username-is-available" title="Direct link to heading">​</a></h2><p><a href="https://playground.matrix.org/#get-/_matrix/client/v3/register/available" target="_blank" rel="noopener noreferrer">Matrix spec</a></p><ul><li>no auth required</li><li>fluffychat doesn't use this maybe because it doesn't reserve the username?</li><li>should be useful for username selection screen</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="register">Register<a class="hash-link" href="#register" title="Direct link to heading">​</a></h2><p><a href="https://github.com/famedly/matrix-dart-sdk/blob/544888fe33a14e0610b2916b5069656a06aeb299/lib/src/client.dart#L450-L490" target="_blank" rel="noopener noreferrer">SDK code</a> | <a href="https://playground.matrix.org/#post-/_matrix/client/v3/register" target="_blank" rel="noopener noreferrer">Matrix Spec</a></p><ul><li>no auth required</li><li>when hitting the <code>matrix.org</code> server with only a username, it returns a <code>401</code> with a response body that tells you the "authentication flows" that are available to you for this endpoint on this server.</li></ul><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "session": "jgIeMOlHYubxOZYzaFSMCFqJ",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "flows": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "stages": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "m.login.recaptcha",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "m.login.terms",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "m.login.email.identity"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "params": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "m.login.recaptcha": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "public_key": "6LcgI54UAAAAABGdGmruw6DdOocFpYVdjYBRe4zb"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        },</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "m.login.terms": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "policies": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "privacy_policy": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    "version": "1.0",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    "en": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "name": "Terms and Conditions",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                        "url": "https://matrix-client.matrix.org/_matrix/consent?v=1.0"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In this case the "authentication" is the steps that you will need to go through in order to register on this server; pass recaptcha, agree to terms and conditions and go through an email verification flow (receive an email and click the button in it)</p><p>On my local dockerized synapse instance I wanted to start with the simplest <a href="https://matrix-org.github.io/synapse/latest/usage/configuration/config_documentation.html" target="_blank" rel="noopener noreferrer">configuration</a> and build up from there. </p><p>The basic configuration does not allow any registrations.
Adding <code>enable_registration: true</code> will get you a startup error telling you that you shouldn't allow registrations without some additional measures to confirm identity (like the steps above that matrix.org makes you go through). Otherwise people can spam requests to create accounts.</p><p>On my local though, it tells me that I can add <code>enable_registration_without_verification: true</code> to allow such registrations anyways.</p><p>After doing that I naively try to submit a registration request with just a username and an email:</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">curl --location 'localhost:8008/_matrix/client/v3/register' \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--header 'Content-Type: application/json' \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--data '{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "username": "cheeeeky_monkey",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "password": "password"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>I get back this cryptic response and it does not register a user.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "session": "bFygXrPrCVAOztdAJyjjDOim",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "flows": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "stages": [</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                "m.login.dummy"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            ]</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    ],</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "params": {}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>After reading through the <a href="https://spec.matrix.org/v1.9/client-server-api/#user-interactive-authentication-api" target="_blank" rel="noopener noreferrer">User-Interactive Authentication API docs</a> I learned that this is my server telling me that I have one flow that I can take to authenticate this registration request. And that path is to perform no flow! All I have to do is add the auth parameter to my registration request.</p><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "password": "ilovebananas",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "username": "cheeky_monkey",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "auth": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "session": "qRFAzYnVJgHQdobMkUhOQlUU",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "type": "m.login.dummy"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>The session is optional in this case because the flow only has a single step (multiple step flows will require sending the same session token). Including the <code>m.login.dummy</code> auth type basically is just a little hoop we have to jump through to make this request without going through any actual flow.</p><p>We registered a user! But as per that earlier error's advice, we can't go public with this configuration. For Quiri we want to register users with their emails so it's time to figure out how to configure the server to require email for registration and also configure it to send the emails!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="registering-a-user-with-an-email">Registering a user with an email<a class="hash-link" href="#registering-a-user-with-an-email" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="setting-up-a-dev-email-server">Setting up a dev email server<a class="hash-link" href="#setting-up-a-dev-email-server" title="Direct link to heading">​</a></h3><p>At first I was looking into different services like SendGrid (will probably use this for the actual deployment) but then I realized I should be able to use an SMTP server hosted in a local docker container!</p><p>So I am trying <a href="https://github.com/rnwood/smtp4dev" target="_blank" rel="noopener noreferrer">smtp4dev</a></p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="get-the-registration-token">Get the registration token<a class="hash-link" href="#get-the-registration-token" title="Direct link to heading">​</a></h3><ul><li><a href="https://playground.matrix.org/#post-/_matrix/client/v3/register/email/requestToken" target="_blank" rel="noopener noreferrer">API doc</a></li></ul><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">curl --location 'localhost:8008/_matrix/client/v3/register/email/requestToken' \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--header 'Content-Type: application/json' \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--data-raw '{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "client_secret": "monkeys_are_GREAT",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "email": "alice@example.org",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "next_link": "https://example.org/congratulations.html",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  "send_attempt": 1</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>the client secret is any string invented by the client</li><li>this sends the email with the validation link!</li><li>the response is an sid<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "sid": "WurCLwjxFYIGiTIz"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="click-the-verification-link">Click the verification link<a class="hash-link" href="#click-the-verification-link" title="Direct link to heading">​</a></h3><ul><li>you cannot continue with registration until that link is clicked</li><li>go to <code>localhost:5005</code> for the smtp4dev interface and open the email</li><li>the link is currently https, which won't work<ul><li>I should figure out how to make it use http for the link</li><li>for now just copy paste it from the email into the browser and edit to <code>http</code></li><li>it will redirect to a 404 page because I haven't set up a redirect page yet</li><li>but it did succeed!</li></ul></li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="complete-the-registration">Complete the registration<a class="hash-link" href="#complete-the-registration" title="Direct link to heading">​</a></h3><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">curl --location 'localhost:8008/_matrix/client/v3/register' \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--header 'Content-Type: application/json' \</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">--data '{</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "device_id": "GHTYAJCE",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "inhibit_login": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "initial_device_display_name": "Jungle Phone",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "password": "ilovebananas",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "refresh_token": false,</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "username": "cheeky_monkey_email",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    "auth": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "session": "bdZxZeFmpPxdAuSVoGalmiPC",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "type": "m.login.email.identity",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        "threepid_creds": {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "sid": "ygxQvHncMIMQzFTk",</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            "client_secret": "monkeys_are_GREAT"</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><ul><li>the sid is from the previous email registration request</li><li>the client_secret was provided in the previous email registration request</li><li>this will fail if the user has not yet clicked the link in their email</li><li>if they have clicked that link, the user is now registered, your first token is returned and we're off!</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="email-registration-user-experience">Email Registration User Experience<a class="hash-link" href="#email-registration-user-experience" title="Direct link to heading">​</a></h2><ul><li>User is asked for email and password<ul><li>random client_secret is generated by client and stored in localstorage</li><li>request is sent to matrix to send verification email<ul><li>sid of response is held in local storage</li></ul></li><li>password is held in local storage?<ul><li>security risk?</li></ul></li></ul></li><li>User is taken to a page informing them that they must click the link in the email to continue<ul><li>include button to resend the request</li></ul></li><li>when the button is clicked in the email, we should try to send them into the app?<ul><li>or just give them a message that they should go back to the app to continue</li></ul></li><li>whenever they return to the "check your email" page, try to register them with no password<ul><li>if they have yet to have validated, it will respond with EMAIL_NOT_VALIDATED</li><li>if they have validated it will respond with NO_PASSWORD</li></ul></li><li>once the NO_PASSWORD response comes up, move the user through the username selection process</li><li>once they have selected a username, send the final registration request with username, password, email token (sid)<ul><li>an access token will be returned and the user is on their merry way</li></ul></li><li>make sure to remove the password from local storage!</li></ul><p>Throughout the above process, if the user closes the app and re-opens they should be brought back to the screen that they were at. The information that they provide needs to be stored in "localstorage" until they make the final registration call.</p>]]></content>
        <author>
            <name>Nigel Maynard</name>
            <uri>https://github.com/nigel-smk</uri>
        </author>
        <category label="guides" term="guides"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Using Ory for Auth with Synapse]]></title>
        <id>using-ory-for-auth-with-synapse</id>
        <link href="https://quiri-io.github.io/quiri-docs/blog/using-ory-for-auth-with-synapse"/>
        <updated>2023-10-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[We are now working on the designs for the MVP app which has me figuring out user signup/signin. While the matrix folks have built-in a variety of authentication methods, I am inclined to use a dedicated signup/signin service and let matrix focus on chat.]]></summary>
        <content type="html"><![CDATA[<p>We are now working on the designs for the MVP app which has me figuring out user signup/signin. While the matrix folks have built-in a variety of authentication methods, I am inclined to use a dedicated signup/signin service and let matrix focus on chat.</p><p>This post is my effort to lay out my understanding of the options that Synapse offers and the tradeoffs they have.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="research">Research<a class="hash-link" href="#research" title="Direct link to heading">​</a></h2><ul><li><a href="https://matrix-org.github.io/synapse/latest/usage/configuration/user_authentication/index.html" target="_blank" rel="noopener noreferrer">sparse synapse docs regarding oidc</a><ul><li>lists Hydra as a tested provider but doesn't include it in any examples</li><li>is this the same thing as Matrix Authentication Service?</li><li>this looks like it is Matrix baking in additional authentication mechanisms rather than totally offloading the authentication to something like MAS...</li></ul></li><li><a href="https://areweoidcyet.com/" target="_blank" rel="noopener noreferrer">dedicated site regarding matrix migrating to OIDC</a><ul><li>lists MAS alongside Keycloak under OpenID Providers. Does Ory Hydra fit in the same category and why is Hydra listed as <a href="https://matrix-org.github.io/synapse/latest/openid.html" target="_blank" rel="noopener noreferrer">"tested" here</a> but not listed in this doc?</li></ul></li><li><a href="https://areweoidcyet.com/client-implementation-guide/" target="_blank" rel="noopener noreferrer">areweoidcyet client implementation guide</a><ul><li>provides more details on client flows</li><li>lots of details on how the client interacts with an "oidc" homeserver</li></ul></li><li><a href="https://playground.matrix.org/#post-/_matrix/client/v3/register" target="_blank" rel="noopener noreferrer">matrix playground account management requests</a></li><li><a href="https://spec.matrix.org/v1.8/client-server-api/#client-authentication" target="_blank" rel="noopener noreferrer">matrix spec 1.8 (including registration/authentication)</a></li><li><a href="https://github.com/matrix-org/synapse/pull/15582" target="_blank" rel="noopener noreferrer">merged PR that moves auth to OIDC</a><ul><li>merged May 2023</li><li>note the deprecation of old registration endpoints</li><li>contains detailed notes on how to run the matrix-authentication-service<ul><li>do we need to run that or is it baked in now?</li></ul></li></ul></li><li><a href="https://github.com/matrix-org/matrix-authentication-service" target="_blank" rel="noopener noreferrer">matrix-authentication-service repo</a><ul><li>can I use something like Hydra instead of MAS?</li><li>looks like you could work with Hydra as an "upstream" IDP but if I can just use it as the main one then why run MAS as well?</li><li><a href="https://areweoidcyet.com/#whats-this-matrix-authentication-service-that-ive-heard-about" target="_blank" rel="noopener noreferrer">some details about MAS from areweoidcyet.com</a></li></ul></li><li><a href="https://matrix-org.github.io/matrix-authentication-service/index.html" target="_blank" rel="noopener noreferrer">MAS documentation</a><ul><li>good introduction to how the matrix chat server and the auth server will interact</li></ul></li><li><a href="https://github.com/matrix-org/synapse/issues/15573" target="_blank" rel="noopener noreferrer">PR for bringing delegated auth to an official release</a><ul><li>still open</li><li>still experimental</li></ul></li><li><a href="https://github.com/matrix-org/matrix-spec-proposals/pull/3861/files" target="_blank" rel="noopener noreferrer">the matrix spec change request for delegating auth</a><ul><li>has more details about the motivation and the current state of auth</li></ul></li><li><a href="https://github.com/vector-im/oidc-playground" target="_blank" rel="noopener noreferrer">Matrix OpenID Connect Playground repo</a><ul><li>this is hosted somewhere</li><li>not sure how it is useful to me</li></ul></li><li><a href="https://blog.px.dev/open-source-auth/" target="_blank" rel="noopener noreferrer">Blog post about manually integrating Kratos and Hydra (and why)</a></li><li><a href="https://github.com/ory/kratos/issues/273#issuecomment-1305388654" target="_blank" rel="noopener noreferrer">Kratos issue comment that appears to be the most complete integration guide?</a></li><li><a href="https://gruchalski.com/posts/2021-04-10-ory-reference-docker-compose-and-thoughts-on-the-platform/" target="_blank" rel="noopener noreferrer">Kratos/Hydra critique</a></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="hosting-my-own-hydra-oidc-provider-and-using-already-built-in-oidc-to-authenticate-all-users">Hosting My Own Hydra OIDC Provider and Using Already Built-in OIDC to Authenticate All users<a class="hash-link" href="#hosting-my-own-hydra-oidc-provider-and-using-already-built-in-oidc-to-authenticate-all-users" title="Direct link to heading">​</a></h2><p>It seems that while the proposal to have all matrix clients authenticate with matrix via OIDC, it is still just a proposal and is currently experimental. I feel that I now understand how I can have users that are managed by Ory Hydra/Kratos but have accounts on my Matrix server.</p><ul><li>Kratos offers signup/signin services via API that can be used to create accounts</li><li>Hydra provides the OIDC interface so that users can "login using Ory" in the same way that they might "sign in using google"<ul><li>while google has other applications and things that you might use your google account for, my Ory deployment would only be holding their identities (not the best explanation)</li></ul></li><li>on the Matrix server side, I configure the server to only allow auth through oidc and only configure Ory as the provider<ul><li>google, auth0, etc are able to be configured as downstream providers to Ory</li></ul></li><li>if the proposal takes off, hopefully it's not too complicated to shift to using the Hydra/Kratos as the OIDC Provider rather than MAS</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="to-investigate">To Investigate<a class="hash-link" href="#to-investigate" title="Direct link to heading">​</a></h3><ul><li>can we obscure the Matrix server to Ory auth process in a way that makes the user feel like they are using a basic login and not using a social-like signin?</li><li>how hard is it going to be to integrate Kratos and Hydra?</li><li>Is this overcomplicated?</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="using-passwordprovider-module-to-directly-integrate-with-kratos">Using PasswordProvider Module to Directly integrate with Kratos<a class="hash-link" href="#using-passwordprovider-module-to-directly-integrate-with-kratos" title="Direct link to heading">​</a></h2><ul><li>does this restrict the login/security options that Kratos offers?</li><li>does this reduce the complexity that much?</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="just-use-the-built-in-auth-as-it-is">Just use the built-in auth as it is<a class="hash-link" href="#just-use-the-built-in-auth-as-it-is" title="Direct link to heading">​</a></h2><ul><li>limited to the auth options that are already made available<ul><li>there are a bunch of them...</li></ul></li><li>less secure?<ul><li>another auth rewrite from a team that should be focussing on chat?</li><li>they are very security focussed though...</li></ul></li><li>looks like I'm going with this because the Kratos/Hydra integration is not looking straightforward enough at this time<ul><li>in the future that does seem like the best option</li></ul></li></ul>]]></content>
        <author>
            <name>Nigel Maynard</name>
            <uri>https://github.com/nigel-smk</uri>
        </author>
        <category label="guides" term="guides"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Project Structure and State Management in Flutter]]></title>
        <id>project-structure-and-state-management-in-flutter</id>
        <link href="https://quiri-io.github.io/quiri-docs/blog/project-structure-and-state-management-in-flutter"/>
        <updated>2022-11-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Flutter is a compelling technology but it is not very mature so there are some challenges when it comes to filling in the functionality that is missing from the core libraries. I have spent a lot of time reading different blogs, etc. to try to get some guidance and hopefully avoid some common pitfalls. One resource that has been useful is codewithandrea.com. I am going to be referencing his riverpod and other architecture articles to inform my library architectural decisions.]]></summary>
        <content type="html"><![CDATA[<p>Flutter is a compelling technology but it is not very mature so there are some challenges when it comes to filling in the functionality that is missing from the core libraries. I have spent a lot of time reading different blogs, etc. to try to get some guidance and hopefully avoid some common pitfalls. One resource that has been useful is <a href="https://codewithandrea.com/tutorials/" target="_blank" rel="noopener noreferrer">codewithandrea.com</a>. I am going to be referencing his riverpod and other architecture articles to inform my library architectural decisions.</p>]]></content>
        <author>
            <name>Nigel Maynard</name>
            <uri>https://github.com/nigel-smk</uri>
        </author>
        <category label="guides" term="guides"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Getting Started With the Matrix API]]></title>
        <id>getting-started-matrix-api</id>
        <link href="https://quiri-io.github.io/quiri-docs/blog/getting-started-matrix-api"/>
        <updated>2022-08-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[After some exploration of Android development (specifically jetpack compose), I finally took a proper swing at Flutter and while jetpack compose seems like a powerful tool and I would love to get to know kotlin better, the cross-platform development and cross-platform design was just too alluring.]]></summary>
        <content type="html"><![CDATA[<p>After some exploration of Android development (specifically jetpack compose), I finally took a proper swing at Flutter and while jetpack compose seems like a powerful tool and I would love to get to know kotlin better, the cross-platform development and cross-platform design was just too alluring. </p><p>I figured I would start with a login screen as it would get me interacting with state and making an API call. I found some widget online that gave me most of the UI, leaving me to figure out constructing the login API request from the form inputs. </p><p>At first I was wary of using an SDK that was not created by the Matrix team but the Famedly folks are actively contributing to it and when it comes down to it, it is just sending HTTP requests to the API. So the first thing was <a href="https://gitlab.com/famedly/company/frontend/famedlysdk" target="_blank" rel="noopener noreferrer">adding the SDK</a> as a dependency.</p><p>It is also important for me to start getting to know the matrix API in general so I found their <a href="https://matrix.org/docs/api/#overview" target="_blank" rel="noopener noreferrer">API reference</a>.</p>]]></content>
        <author>
            <name>Nigel Maynard</name>
            <uri>https://github.com/nigel-smk</uri>
        </author>
        <category label="guides" term="guides"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Getting Started With Flutter]]></title>
        <id>getting-started-with-flutter</id>
        <link href="https://quiri-io.github.io/quiri-docs/blog/getting-started-with-flutter"/>
        <updated>2022-06-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[After putting quite a bit of time into getting Element for Android working as a library so that I could wrap it in my own package, I was finding that even writing a simple feature was proving difficult. I did some evaluation of the amount of energy that would be required to get up to speed with android in a way that would be required for me to make any meaningful progress on quiri and Flutter started to look more attractive.]]></summary>
        <content type="html"><![CDATA[<p>After putting quite a bit of time into getting Element for Android working as a library so that I could wrap it in my own package, I was finding that even writing a simple feature was proving difficult. I did some evaluation of the amount of energy that would be required to get up to speed with android in a way that would be required for me to make any meaningful progress on quiri and Flutter started to look more attractive.</p><p>With the wrapped Element Android version of the app distributed out to Josh, Loisel and Anton, we had collected some solid sample conversations that have helped to inform which features are essential to the quiri experience and which new features we might like to build on top of it. This has given me more confidence in building from scratch using Flutter. </p><p><a href="https://gitlab.com/famedly/company/frontend/famedlysdk" target="_blank" rel="noopener noreferrer">There is an actively maintained matrix SDK for flutter</a> as well as the <a href="https://gitlab.com/famedly/fluffychat" target="_blank" rel="noopener noreferrer">associated open-source app that depends on it (which has decent reviews in the Play Store)</a>. So my thinking is that it's probably a similar effort for me to get up speed on android vs build from scratch in Flutter (maybe I will just build on top of fluffychat...) but if I go with Flutter at least I will understand how all of the code works (because I will write it). Whereas the experience with android right now is one of generally being frustrated and lost in a large and complex codebase. </p><p>While I feel that there is some risk that Flutter will end up being the wrong tool due to some shortcomings, <a href="https://flutter.dev/events/io-2022" target="_blank" rel="noopener noreferrer">it appears to be a pretty solid tool and Google is quite active in improving it.</a> If it plays out well, it will be easy enough to have desktop and web clients as well as android and iOS.</p><h1>Getting Started</h1><p>I had just bought a new macbook so I have had a pretty fresh start. Here are the things that I already installed:</p><ul><li>iTerm2</li><li>ohmyzsh</li><li>xcode and the xcode command line tools (big download)</li><li>vs code</li><li>android studio (to maybe write flutter in)</li><li>docker desktop</li></ul><p>For flutter I just jumped to their <a href="https://docs.flutter.dev/get-started/install" target="_blank" rel="noopener noreferrer">install homepage</a> and went from there.</p><p><code>flutter doctor</code> raised a couple of issues</p><ul><li><code>Unable to locate Android SDK.</code><ul><li>I needed to open Android Studio, which had a first time run wizard that installed the android SDK for me</li></ul></li><li><code>CocoaPods not installed.</code><ul><li>Just followed <a href="https://guides.cocoapods.org/using/getting-started.html#installation" target="_blank" rel="noopener noreferrer">their instructions</a> to install cocoapods as well.</li></ul></li><li><code>cmdline-tools component is missing</code><ul><li>on the Android Studio startup modal, click <code>More actions</code> &gt; <code>SDK Manager</code> &gt; <code>SDK Tools</code> tab &gt; check <code>Android SDK command line tools (latest)</code> and then <code>Apply</code> or <code>OK</code></li></ul></li><li><code>Android license status unknown.</code><ul><li><code>flutter doctor --android-licenses</code></li></ul></li></ul><p>I am going to start with just android devices so I need to take the <a href="https://docs.flutter.dev/get-started/install/macos#android-setup" target="_blank" rel="noopener noreferrer">Android Setup</a> steps as well.</p><h1>IDE</h1><p>I chose android studio because I imagine google has put effort into making it the ideal development experience. I could definitely see myself switching to VS code though.</p><p>I got as far as running the sample app on my device.</p><h1>Next steps</h1><p>I think that I will follow the more detailed intro to creating an app that follows this setup. And then probably go back to the Flutter course I started on Udemy a while back. </p><p>I will need to get some initial designs going with Loisel as well to help guide my efforts.</p>]]></content>
        <author>
            <name>Nigel Maynard</name>
            <uri>https://github.com/nigel-smk</uri>
        </author>
        <category label="guides" term="guides"/>
    </entry>
</feed>